//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1008
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.1008.
// 
#pragma warning disable 1591

namespace smsLauncher.sms_api {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="smsCore_apiSoap", Namespace="http://fhsc.in")]
    public partial class smsCore_api : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback sendMethodWithoutValidationOperationCompleted;
        
        private System.Threading.SendOrPostCallback sendMethodWithValidationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback SentItemsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMemberInfo_StringXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_Access_TokenOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_Secret_IdOperationCompleted;
        
        private System.Threading.SendOrPostCallback Check_AccessToken_and_SecretIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMemberInfo_XMLOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public smsCore_api() {
            this.Url = global::smsLauncher.Properties.Settings.Default.smsLauncher_sms_api_smsCore_api;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event sendMethodWithoutValidationCompletedEventHandler sendMethodWithoutValidationCompleted;
        
        /// <remarks/>
        public event sendMethodWithValidationCompletedEventHandler sendMethodWithValidationCompleted;
        
        /// <remarks/>
        public event GetAllMessageCompletedEventHandler GetAllMessageCompleted;
        
        /// <remarks/>
        public event SentItemsCompletedEventHandler SentItemsCompleted;
        
        /// <remarks/>
        public event GetMemberInfo_StringXMLCompletedEventHandler GetMemberInfo_StringXMLCompleted;
        
        /// <remarks/>
        public event Get_Access_TokenCompletedEventHandler Get_Access_TokenCompleted;
        
        /// <remarks/>
        public event Get_Secret_IdCompletedEventHandler Get_Secret_IdCompleted;
        
        /// <remarks/>
        public event Check_AccessToken_and_SecretIdCompletedEventHandler Check_AccessToken_and_SecretIdCompleted;
        
        /// <remarks/>
        public event GetMemberInfo_XMLCompletedEventHandler GetMemberInfo_XMLCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://fhsc.in/sendMethodWithoutValidation", RequestNamespace="http://fhsc.in", ResponseNamespace="http://fhsc.in", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool sendMethodWithoutValidation(string number, string message, string launcher_id) {
            object[] results = this.Invoke("sendMethodWithoutValidation", new object[] {
                        number,
                        message,
                        launcher_id});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void sendMethodWithoutValidationAsync(string number, string message, string launcher_id) {
            this.sendMethodWithoutValidationAsync(number, message, launcher_id, null);
        }
        
        /// <remarks/>
        public void sendMethodWithoutValidationAsync(string number, string message, string launcher_id, object userState) {
            if ((this.sendMethodWithoutValidationOperationCompleted == null)) {
                this.sendMethodWithoutValidationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsendMethodWithoutValidationOperationCompleted);
            }
            this.InvokeAsync("sendMethodWithoutValidation", new object[] {
                        number,
                        message,
                        launcher_id}, this.sendMethodWithoutValidationOperationCompleted, userState);
        }
        
        private void OnsendMethodWithoutValidationOperationCompleted(object arg) {
            if ((this.sendMethodWithoutValidationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sendMethodWithoutValidationCompleted(this, new sendMethodWithoutValidationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://fhsc.in/sendMethodWithValidation", RequestNamespace="http://fhsc.in", ResponseNamespace="http://fhsc.in", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool sendMethodWithValidation(string number, string message, string launcher_id) {
            object[] results = this.Invoke("sendMethodWithValidation", new object[] {
                        number,
                        message,
                        launcher_id});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void sendMethodWithValidationAsync(string number, string message, string launcher_id) {
            this.sendMethodWithValidationAsync(number, message, launcher_id, null);
        }
        
        /// <remarks/>
        public void sendMethodWithValidationAsync(string number, string message, string launcher_id, object userState) {
            if ((this.sendMethodWithValidationOperationCompleted == null)) {
                this.sendMethodWithValidationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsendMethodWithValidationOperationCompleted);
            }
            this.InvokeAsync("sendMethodWithValidation", new object[] {
                        number,
                        message,
                        launcher_id}, this.sendMethodWithValidationOperationCompleted, userState);
        }
        
        private void OnsendMethodWithValidationOperationCompleted(object arg) {
            if ((this.sendMethodWithValidationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sendMethodWithValidationCompleted(this, new sendMethodWithValidationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://fhsc.in/GetAllMessage", RequestNamespace="http://fhsc.in", ResponseNamespace="http://fhsc.in", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public objectName[] GetAllMessage() {
            object[] results = this.Invoke("GetAllMessage", new object[0]);
            return ((objectName[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllMessageAsync() {
            this.GetAllMessageAsync(null);
        }
        
        /// <remarks/>
        public void GetAllMessageAsync(object userState) {
            if ((this.GetAllMessageOperationCompleted == null)) {
                this.GetAllMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllMessageOperationCompleted);
            }
            this.InvokeAsync("GetAllMessage", new object[0], this.GetAllMessageOperationCompleted, userState);
        }
        
        private void OnGetAllMessageOperationCompleted(object arg) {
            if ((this.GetAllMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllMessageCompleted(this, new GetAllMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://fhsc.in/SentItems", RequestNamespace="http://fhsc.in", ResponseNamespace="http://fhsc.in", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SentItems(int Id, bool IsSent) {
            object[] results = this.Invoke("SentItems", new object[] {
                        Id,
                        IsSent});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SentItemsAsync(int Id, bool IsSent) {
            this.SentItemsAsync(Id, IsSent, null);
        }
        
        /// <remarks/>
        public void SentItemsAsync(int Id, bool IsSent, object userState) {
            if ((this.SentItemsOperationCompleted == null)) {
                this.SentItemsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSentItemsOperationCompleted);
            }
            this.InvokeAsync("SentItems", new object[] {
                        Id,
                        IsSent}, this.SentItemsOperationCompleted, userState);
        }
        
        private void OnSentItemsOperationCompleted(object arg) {
            if ((this.SentItemsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SentItemsCompleted(this, new SentItemsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://fhsc.in/GetMemberInfo_StringXML", RequestNamespace="http://fhsc.in", ResponseNamespace="http://fhsc.in", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetMemberInfo_StringXML(string access_token, string number) {
            object[] results = this.Invoke("GetMemberInfo_StringXML", new object[] {
                        access_token,
                        number});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetMemberInfo_StringXMLAsync(string access_token, string number) {
            this.GetMemberInfo_StringXMLAsync(access_token, number, null);
        }
        
        /// <remarks/>
        public void GetMemberInfo_StringXMLAsync(string access_token, string number, object userState) {
            if ((this.GetMemberInfo_StringXMLOperationCompleted == null)) {
                this.GetMemberInfo_StringXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMemberInfo_StringXMLOperationCompleted);
            }
            this.InvokeAsync("GetMemberInfo_StringXML", new object[] {
                        access_token,
                        number}, this.GetMemberInfo_StringXMLOperationCompleted, userState);
        }
        
        private void OnGetMemberInfo_StringXMLOperationCompleted(object arg) {
            if ((this.GetMemberInfo_StringXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMemberInfo_StringXMLCompleted(this, new GetMemberInfo_StringXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://fhsc.in/Get_Access_Token", RequestNamespace="http://fhsc.in", ResponseNamespace="http://fhsc.in", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Get_Access_Token(string email, string password) {
            object[] results = this.Invoke("Get_Access_Token", new object[] {
                        email,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Get_Access_TokenAsync(string email, string password) {
            this.Get_Access_TokenAsync(email, password, null);
        }
        
        /// <remarks/>
        public void Get_Access_TokenAsync(string email, string password, object userState) {
            if ((this.Get_Access_TokenOperationCompleted == null)) {
                this.Get_Access_TokenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_Access_TokenOperationCompleted);
            }
            this.InvokeAsync("Get_Access_Token", new object[] {
                        email,
                        password}, this.Get_Access_TokenOperationCompleted, userState);
        }
        
        private void OnGet_Access_TokenOperationCompleted(object arg) {
            if ((this.Get_Access_TokenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_Access_TokenCompleted(this, new Get_Access_TokenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://fhsc.in/Get_Secret_Id", RequestNamespace="http://fhsc.in", ResponseNamespace="http://fhsc.in", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Get_Secret_Id() {
            object[] results = this.Invoke("Get_Secret_Id", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Get_Secret_IdAsync() {
            this.Get_Secret_IdAsync(null);
        }
        
        /// <remarks/>
        public void Get_Secret_IdAsync(object userState) {
            if ((this.Get_Secret_IdOperationCompleted == null)) {
                this.Get_Secret_IdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_Secret_IdOperationCompleted);
            }
            this.InvokeAsync("Get_Secret_Id", new object[0], this.Get_Secret_IdOperationCompleted, userState);
        }
        
        private void OnGet_Secret_IdOperationCompleted(object arg) {
            if ((this.Get_Secret_IdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_Secret_IdCompleted(this, new Get_Secret_IdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://fhsc.in/Check_AccessToken_and_SecretId", RequestNamespace="http://fhsc.in", ResponseNamespace="http://fhsc.in", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Check_AccessToken_and_SecretId(string access_token, string secret_id) {
            object[] results = this.Invoke("Check_AccessToken_and_SecretId", new object[] {
                        access_token,
                        secret_id});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Check_AccessToken_and_SecretIdAsync(string access_token, string secret_id) {
            this.Check_AccessToken_and_SecretIdAsync(access_token, secret_id, null);
        }
        
        /// <remarks/>
        public void Check_AccessToken_and_SecretIdAsync(string access_token, string secret_id, object userState) {
            if ((this.Check_AccessToken_and_SecretIdOperationCompleted == null)) {
                this.Check_AccessToken_and_SecretIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheck_AccessToken_and_SecretIdOperationCompleted);
            }
            this.InvokeAsync("Check_AccessToken_and_SecretId", new object[] {
                        access_token,
                        secret_id}, this.Check_AccessToken_and_SecretIdOperationCompleted, userState);
        }
        
        private void OnCheck_AccessToken_and_SecretIdOperationCompleted(object arg) {
            if ((this.Check_AccessToken_and_SecretIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Check_AccessToken_and_SecretIdCompleted(this, new Check_AccessToken_and_SecretIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://fhsc.in/GetMemberInfo_XML", RequestNamespace="http://fhsc.in", ResponseNamespace="http://fhsc.in", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetMemberInfo_XML(string access_token, string number) {
            object[] results = this.Invoke("GetMemberInfo_XML", new object[] {
                        access_token,
                        number});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetMemberInfo_XMLAsync(string access_token, string number) {
            this.GetMemberInfo_XMLAsync(access_token, number, null);
        }
        
        /// <remarks/>
        public void GetMemberInfo_XMLAsync(string access_token, string number, object userState) {
            if ((this.GetMemberInfo_XMLOperationCompleted == null)) {
                this.GetMemberInfo_XMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMemberInfo_XMLOperationCompleted);
            }
            this.InvokeAsync("GetMemberInfo_XML", new object[] {
                        access_token,
                        number}, this.GetMemberInfo_XMLOperationCompleted, userState);
        }
        
        private void OnGetMemberInfo_XMLOperationCompleted(object arg) {
            if ((this.GetMemberInfo_XMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMemberInfo_XMLCompleted(this, new GetMemberInfo_XMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1009")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://fhsc.in")]
    public partial class objectName {
        
        private int idField;
        
        private string numberField;
        
        private string messageField;
        
        private string groupField;
        
        private string lastnameField;
        
        private string firstnameField;
        
        private string townField;
        
        private string provinceField;
        
        private string sponsorField;
        
        private int section_aField;
        
        private int section_bField;
        
        private string pinField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Number {
            get {
                return this.numberField;
            }
            set {
                this.numberField = value;
            }
        }
        
        /// <remarks/>
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
        
        /// <remarks/>
        public string Group {
            get {
                return this.groupField;
            }
            set {
                this.groupField = value;
            }
        }
        
        /// <remarks/>
        public string Lastname {
            get {
                return this.lastnameField;
            }
            set {
                this.lastnameField = value;
            }
        }
        
        /// <remarks/>
        public string Firstname {
            get {
                return this.firstnameField;
            }
            set {
                this.firstnameField = value;
            }
        }
        
        /// <remarks/>
        public string Town {
            get {
                return this.townField;
            }
            set {
                this.townField = value;
            }
        }
        
        /// <remarks/>
        public string Province {
            get {
                return this.provinceField;
            }
            set {
                this.provinceField = value;
            }
        }
        
        /// <remarks/>
        public string Sponsor {
            get {
                return this.sponsorField;
            }
            set {
                this.sponsorField = value;
            }
        }
        
        /// <remarks/>
        public int Section_a {
            get {
                return this.section_aField;
            }
            set {
                this.section_aField = value;
            }
        }
        
        /// <remarks/>
        public int Section_b {
            get {
                return this.section_bField;
            }
            set {
                this.section_bField = value;
            }
        }
        
        /// <remarks/>
        public string Pin {
            get {
                return this.pinField;
            }
            set {
                this.pinField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void sendMethodWithoutValidationCompletedEventHandler(object sender, sendMethodWithoutValidationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class sendMethodWithoutValidationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal sendMethodWithoutValidationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void sendMethodWithValidationCompletedEventHandler(object sender, sendMethodWithValidationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class sendMethodWithValidationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal sendMethodWithValidationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetAllMessageCompletedEventHandler(object sender, GetAllMessageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectName[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectName[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SentItemsCompletedEventHandler(object sender, SentItemsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SentItemsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SentItemsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetMemberInfo_StringXMLCompletedEventHandler(object sender, GetMemberInfo_StringXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMemberInfo_StringXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMemberInfo_StringXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Get_Access_TokenCompletedEventHandler(object sender, Get_Access_TokenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_Access_TokenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_Access_TokenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Get_Secret_IdCompletedEventHandler(object sender, Get_Secret_IdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_Secret_IdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_Secret_IdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Check_AccessToken_and_SecretIdCompletedEventHandler(object sender, Check_AccessToken_and_SecretIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Check_AccessToken_and_SecretIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Check_AccessToken_and_SecretIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetMemberInfo_XMLCompletedEventHandler(object sender, GetMemberInfo_XMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMemberInfo_XMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMemberInfo_XMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591