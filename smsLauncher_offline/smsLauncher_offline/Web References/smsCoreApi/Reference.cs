//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1008
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.1008.
// 
#pragma warning disable 1591

namespace smsLauncher_offline.smsCoreApi {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="smsCore_apiSoap", Namespace="http://fhsc.in")]
    public partial class smsCore_api : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback sendMethodWithoutValidationOperationCompleted;
        
        private System.Threading.SendOrPostCallback sendMethodWithValidationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback SentItemsOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public smsCore_api() {
            this.Url = global::smsLauncher_offline.Properties.Settings.Default.smsLauncher_offline_smsCoreApi_smsCore_api;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event sendMethodWithoutValidationCompletedEventHandler sendMethodWithoutValidationCompleted;
        
        /// <remarks/>
        public event sendMethodWithValidationCompletedEventHandler sendMethodWithValidationCompleted;
        
        /// <remarks/>
        public event GetAllMessageCompletedEventHandler GetAllMessageCompleted;
        
        /// <remarks/>
        public event SentItemsCompletedEventHandler SentItemsCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://fhsc.in/sendMethodWithoutValidation", RequestNamespace="http://fhsc.in", ResponseNamespace="http://fhsc.in", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool sendMethodWithoutValidation(string number, string message) {
            object[] results = this.Invoke("sendMethodWithoutValidation", new object[] {
                        number,
                        message});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void sendMethodWithoutValidationAsync(string number, string message) {
            this.sendMethodWithoutValidationAsync(number, message, null);
        }
        
        /// <remarks/>
        public void sendMethodWithoutValidationAsync(string number, string message, object userState) {
            if ((this.sendMethodWithoutValidationOperationCompleted == null)) {
                this.sendMethodWithoutValidationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsendMethodWithoutValidationOperationCompleted);
            }
            this.InvokeAsync("sendMethodWithoutValidation", new object[] {
                        number,
                        message}, this.sendMethodWithoutValidationOperationCompleted, userState);
        }
        
        private void OnsendMethodWithoutValidationOperationCompleted(object arg) {
            if ((this.sendMethodWithoutValidationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sendMethodWithoutValidationCompleted(this, new sendMethodWithoutValidationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://fhsc.in/sendMethodWithValidation", RequestNamespace="http://fhsc.in", ResponseNamespace="http://fhsc.in", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool sendMethodWithValidation(string number, string message) {
            object[] results = this.Invoke("sendMethodWithValidation", new object[] {
                        number,
                        message});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void sendMethodWithValidationAsync(string number, string message) {
            this.sendMethodWithValidationAsync(number, message, null);
        }
        
        /// <remarks/>
        public void sendMethodWithValidationAsync(string number, string message, object userState) {
            if ((this.sendMethodWithValidationOperationCompleted == null)) {
                this.sendMethodWithValidationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsendMethodWithValidationOperationCompleted);
            }
            this.InvokeAsync("sendMethodWithValidation", new object[] {
                        number,
                        message}, this.sendMethodWithValidationOperationCompleted, userState);
        }
        
        private void OnsendMethodWithValidationOperationCompleted(object arg) {
            if ((this.sendMethodWithValidationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sendMethodWithValidationCompleted(this, new sendMethodWithValidationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://fhsc.in/GetAllMessage", RequestNamespace="http://fhsc.in", ResponseNamespace="http://fhsc.in", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public message[] GetAllMessage() {
            object[] results = this.Invoke("GetAllMessage", new object[0]);
            return ((message[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllMessageAsync() {
            this.GetAllMessageAsync(null);
        }
        
        /// <remarks/>
        public void GetAllMessageAsync(object userState) {
            if ((this.GetAllMessageOperationCompleted == null)) {
                this.GetAllMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllMessageOperationCompleted);
            }
            this.InvokeAsync("GetAllMessage", new object[0], this.GetAllMessageOperationCompleted, userState);
        }
        
        private void OnGetAllMessageOperationCompleted(object arg) {
            if ((this.GetAllMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllMessageCompleted(this, new GetAllMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://fhsc.in/SentItems", RequestNamespace="http://fhsc.in", ResponseNamespace="http://fhsc.in", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SentItems(int Id, bool IsSent) {
            object[] results = this.Invoke("SentItems", new object[] {
                        Id,
                        IsSent});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SentItemsAsync(int Id, bool IsSent) {
            this.SentItemsAsync(Id, IsSent, null);
        }
        
        /// <remarks/>
        public void SentItemsAsync(int Id, bool IsSent, object userState) {
            if ((this.SentItemsOperationCompleted == null)) {
                this.SentItemsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSentItemsOperationCompleted);
            }
            this.InvokeAsync("SentItems", new object[] {
                        Id,
                        IsSent}, this.SentItemsOperationCompleted, userState);
        }
        
        private void OnSentItemsOperationCompleted(object arg) {
            if ((this.SentItemsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SentItemsCompleted(this, new SentItemsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1009")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://fhsc.in")]
    public partial class message {
        
        private int idField;
        
        private string numberField;
        
        private string messageField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Number {
            get {
                return this.numberField;
            }
            set {
                this.numberField = value;
            }
        }
        
        /// <remarks/>
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void sendMethodWithoutValidationCompletedEventHandler(object sender, sendMethodWithoutValidationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class sendMethodWithoutValidationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal sendMethodWithoutValidationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void sendMethodWithValidationCompletedEventHandler(object sender, sendMethodWithValidationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class sendMethodWithValidationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal sendMethodWithValidationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetAllMessageCompletedEventHandler(object sender, GetAllMessageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public message[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((message[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SentItemsCompletedEventHandler(object sender, SentItemsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SentItemsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SentItemsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591